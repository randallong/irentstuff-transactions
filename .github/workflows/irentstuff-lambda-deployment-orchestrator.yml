name: Lambda Deployment Orchestrator

on:
  push:
    branches:
      - main

jobs:
  # Stage 1: Linting
  lint_with_flake8:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=15 --statistics

  # Stage 2: Unit tests
  unit_tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: lint_with_flake8
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install boto3

      - name: Set AWS Region
        run: echo "AWS_REGION=ap-southeast-1" >> $GITHUB_ENV

      - name: Run tests
        run: |
          coverage run -m pytest
          coverage report
          mkdir -p coverage_report
          coverage html -d coverage_report/
    
      - name: Archive coverage HTML report
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: coverage-report
          path: coverage_report/
  
  # Stage 3: SAST with Semgrep
  semgrep_analysis:
    runs-on: ubuntu-latest
    needs: unit_tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v2 

    - name: Set up Python 3.10
      uses: actions/setup-python@v2  
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install semgrep  # Install Semgrep

    - name: Run Semgrep analysis
      run: |
        semgrep --config p/ci --error --verbose --json > semgrep-report.json  # Run Semgrep with default CI rules
      continue-on-error: true

    - name: Upload Semgrep report
      uses: actions/upload-artifact@v4  
      with:
        name: semgrep-report
        path: semgrep-report.json

  # Stage 4: Check if Lambdas need to be deployed
  orchestrate_lambda_deployments:
    name: Orchestrate Lambda deployments
    runs-on: ubuntu-latest
    needs: semgrep_analysis
    outputs:
      deploy_irentstuff_authenticate_user: ${{ steps.set_irentstuff_authenticate_user_output.outputs.deploy_irentstuff_authenticate_user }}
      deploy_irentstuff_purchase_add: ${{ steps.set_irentstuff_purchase_add_output.outputs.deploy_irentstuff_purchase_add }}
      deploy_irentstuff_purchase_update: ${{ steps.set_irentstuff_purchase_update_output.outputs.deploy_irentstuff_purchase_update }}
      deploy_irentstuff_purchase_get: ${{ steps.set_irentstuff_purchase_get_output.outputs.deploy_irentstuff_purchase_get }}
      deploy_irentstuff_purchase_user: ${{ steps.set_irentstuff_purchase_user_output.outputs.deploy_irentstuff_purchase_user }}
      deploy_irentstuff_rental_add: ${{ steps.set_irentstuff_rental_add_output.outputs.deploy_irentstuff_rental_add }}
      deploy_irentstuff_rental_update: ${{ steps.set_irentstuff_rental_update_output.outputs.deploy_irentstuff_rental_update }}
      deploy_irentstuff_rentals_get: ${{ steps.set_irentstuff_rentals_get_output.outputs.deploy_irentstuff_rentals_get }}
      deploy_irentstuff_rental_user: ${{ steps.set_irentstuff_rental_user_output.outputs.deploy_irentstuff_rental_user }}
      

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract commit message
        id: extract_commit_message
        run: |
          SANITIZED_COMMIT_MESSAGE=$(echo "${{ github.event.head_commit.message }}" | sed ':a;N;$!ba;s/\n/ /g' | sed 's/"/\\"/g')
          echo "COMMIT_MESSAGE=$SANITIZED_COMMIT_MESSAGE" >> $GITHUB_ENV

      - name: Check commit message for irentstuff_authenticate_user
        id: set_irentstuff_authenticate_user_output
        run: |
          if [[ "$COMMIT_MESSAGE" == *"deploy irentstuff_authenticate_user"*|| \
                "$COMMIT_MESSAGE" == *"deploy all Lambdas"* ]]; then
            echo "::set-output name=deploy_irentstuff_authenticate_user::true"
          else
            echo "::set-output name=deploy_irentstuff_authenticate_user::false"
          fi

      - name: Check commit message for irentstuff_purchase_add
        id: set_irentstuff_purchase_add_output
        run: |
          if [[ "$COMMIT_MESSAGE" == *"deploy irentstuff_purchase_add"* || \
                "$COMMIT_MESSAGE" == *"deploy all purchase Lambdas"* || \
                "$COMMIT_MESSAGE" == *"deploy all Lambdas"* ]]; then
            echo "::set-output name=deploy_irentstuff_purchase_add::true"
          else
            echo "::set-output name=deploy_irentstuff_purchase_add::false"
          fi

      - name: Check commit message for irentstuff_purchase_update
        id: set_irentstuff_purchase_update_output
        run: |
          if [[ "$COMMIT_MESSAGE" == *"deploy irentstuff_purchase_update"* || \
                "$COMMIT_MESSAGE" == *"deploy all purchase Lambdas"* || \
                "$COMMIT_MESSAGE" == *"deploy all Lambdas"* ]]; then
            echo "::set-output name=deploy_irentstuff_purchase_update::true"
          else
            echo "::set-output name=deploy_irentstuff_purchase_update::false"
          fi

      - name: Check commit message for irentstuff_purchase_get
        id: set_irentstuff_purchase_get_output
        run: |
          if [[ "$COMMIT_MESSAGE" == *"deploy irentstuff_purchase_get"* || \
                "$COMMIT_MESSAGE" == *"deploy all purchase Lambdas"* || \
                "$COMMIT_MESSAGE" == *"deploy all Lambdas"* ]]; then
            echo "::set-output name=deploy_irentstuff_purchase_get::true"
          else
            echo "::set-output name=deploy_irentstuff_purchase_get::false"
          fi

      - name: Check commit message for irentstuff_purchase_user
        id: set_irentstuff_purchase_user_output
        run: |
          if [[ "$COMMIT_MESSAGE" == *"deploy irentstuff_purchase_user"* || \
                "$COMMIT_MESSAGE" == *"deploy all purchase Lambdas"* || \
                "$COMMIT_MESSAGE" == *"deploy all Lambdas"* ]]; then
            echo "::set-output name=deploy_irentstuff_purchase_user::true"
          else
            echo "::set-output name=deploy_irentstuff_purchase_user::false"
          fi

      - name: Check commit message for irentstuff_rental_add
        id: set_irentstuff_rental_add_output
        run: |
          if [[ "$COMMIT_MESSAGE" == *"deploy irentstuff_rental_add"* || \
                "$COMMIT_MESSAGE" == *"deploy all rental Lambdas"* || \
                "$COMMIT_MESSAGE" == *"deploy all Lambdas"* ]]; then
            echo "::set-output name=deploy_irentstuff_rental_add::true"
          else
            echo "::set-output name=deploy_irentstuff_rental_add::false"
          fi

      - name: Check commit message for irentstuff_rental_update
        id: set_irentstuff_rental_update_output
        run: |
          if [[ "$COMMIT_MESSAGE" == *"deploy irentstuff_rental_update"* || \
                "$COMMIT_MESSAGE" == *"deploy all rental Lambdas"* || \
                "$COMMIT_MESSAGE" == *"deploy all Lambdas"* ]]; then
            echo "::set-output name=deploy_irentstuff_rental_update::true"
          else
            echo "::set-output name=deploy_irentstuff_rental_update::false"
          fi

      - name: Check commit message for irentstuff_rentals_get
        id: set_irentstuff_rentals_get_output
        run: |
          if [[ "$COMMIT_MESSAGE" == *"deploy irentstuff_rentals_get"* || \
                "$COMMIT_MESSAGE" == *"deploy all rental Lambdas"* || \
                "$COMMIT_MESSAGE" == *"deploy all Lambdas"* ]]; then
            echo "::set-output name=deploy_irentstuff_rentals_get::true"
          else
            echo "::set-output name=deploy_irentstuff_rentals_get::false"
          fi

      - name: Check the commit message for irentstuff_rental_user
        id: set_irentstuff_rental_user_output
        run: |
          if [[ "$COMMIT_MESSAGE" == *"deploy irentstuff_rental_user"* || \
                "$COMMIT_MESSAGE" == *"deploy all rental Lambdas"* || \
                "$COMMIT_MESSAGE" == *"deploy all Lambdas"* ]]; then
            echo "::set-output name=deploy_irentstuff_rental_user::true"
          else
            echo "::set-output name=deploy_irentstuff_rental_user::false"
          fi

      - name: Deployment summary
        id: deployment_summary
        run:
          echo "Deploy irentstuff_authenticate_user - ${{ steps.set_irentstuff_authenticate_user_output.outputs.deploy_irentstuff_authenticate_user }}"
          echo "Deploy irentstuff_purchase_add - ${{ steps.set_irentstuff_purchase_add_output.outputs.deploy_irentstuff_purchase_add }}"
          echo "Deploy irentstuff_purchase_update - ${{ steps.set_irentstuff_purchase_update_output.outputs.deploy_irentstuff_purchase_update }}"
          echo "Deploy irentstuff_purchase_get - ${{ steps.set_irentstuff_purchase_get_output.outputs.deploy_irentstuff_purchase_get }}"
          echo "Deploy irentstuff_purchase_user - ${{ steps.set_irentstuff_purchase_user_output.outputs.deploy_irentstuff_purchase_user }}"
          echo "Deploy irentstuff_rental_add - ${{ steps.set_irentstuff_rental_add_output.outputs.deploy_irentstuff_rental_add }}"
          echo "Deploy irentstuff_rental_update - ${{ steps.set_irentstuff_rental_update_output.outputs.deploy_irentstuff_rental_update }}"
          echo "Deploy irentstuff_rentals_get - ${{ steps.set_irentstuff_rentals_get_output.outputs.deploy_irentstuff_rentals_get }}"
          echo "Deploy irentstuff_rental_user - ${{ steps.set_irentstuff_rental_user_output.outputs.deploy_irentstuff_rental_user }}"

  # Stage 5a: Deploy irentstuff_authenticate_user if triggered
  deploy_irentstuff_authenticate_user:
    name: Deploy irentstuff_authenticate_user Lambda
    runs-on: ubuntu-latest
    needs: orchestrate_lambda_deployments
    if: needs.orchestrate_lambda_deployments.outputs.deploy_irentstuff_authenticate_user == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_authenticate_user
          pip install -r requirements.txt

      - name: Package irentstuff_authenticate_user Lambda
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_authenticate_user
          zip -r irentstuff_authenticate_user.zip . -x "test_irentstuff_authenticate_user.py"

      - name: Deploy irentstuff_authenticate_user Lambda
        run: |
          aws lambda update-function-code --function-name irentstuff-authenticate-user --zip-file fileb://$GITHUB_WORKSPACE/irentstuff_authenticate_user/irentstuff_authenticate_user.zip

  # Stage 5b: Deploy irentstuff_purchase_add if triggered
  deploy_irentstuff_purchase_add:
    name: Deploy irentstuff_purchase_add Lambda
    runs-on: ubuntu-latest
    needs: orchestrate_lambda_deployments
    if: needs.orchestrate_lambda_deployments.outputs.deploy_irentstuff_purchase_add == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_purchase_add
          pip install -r requirements.txt

      - name: Package irentstuff_purchase_add Lambda
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_purchase_add
          zip -r irentstuff_purchase_add.zip . \
            -x "test_irentstuff_purchase_add.py" \
            -x "certifi/*" \
            -x "certifi-2024.8.30.dist-info/*" \
            -x "charset_normalizer/*" \
            -x "charset_normalizer-3.3.2.dist-info/*" \
            -x "idna/*" \
            -x "idna-3.8.dist-info/*" \
            -x "pymysql/*" \
            -x "PyMySQL-1.1.1.dist-info/*" \
            -x "requests/*" \
            -x "requests-2.32.3.dist-info/*" \"
            -x "urllib3/*" \"
            -x "urllib3-2.2.2.dist-info/*" \"
            -x "websocket/*" \"
            -x "websocket_client-1.8.0.dist-info/*" \"

      - name: Deploy irentstuff_purchase_add Lambda
        run: |
          aws lambda update-function-code --function-name irentstuff-purchase-add --zip-file fileb://$GITHUB_WORKSPACE/irentstuff_purchase_add/irentstuff_purchase_add.zip

  # Stage 5c: Deploy irentstuff_purchase_update if triggered
  deploy_irentstuff_purchase_update:
    name: Deploy irentstuff_purchase_update Lambda
    runs-on: ubuntu-latest
    needs: orchestrate_lambda_deployments
    if: needs.orchestrate_lambda_deployments.outputs.deploy_irentstuff_purchase_update == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_purchase_update
          pip install -r requirements.txt

      - name: Package irentstuff_purchase_update Lambda
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_purchase_update
          zip -r irentstuff_purchase_update.zip . -x "test_irentstuff_purchase_update.py"

      - name: Deploy irentstuff_purchase_update Lambda
        run: |
          aws lambda update-function-code --function-name irentstuff-purchase-update --zip-file fileb://$GITHUB_WORKSPACE/irentstuff_purchase_update/irentstuff_purchase_update.zip

  # Stage 5d: Deploy irentstuff_purchase_get if triggered
  deploy_irentstuff_purchase_get:
    name: Deploy irentstuff_purchase_get Lambda
    runs-on: ubuntu-latest
    needs: orchestrate_lambda_deployments
    if: needs.orchestrate_lambda_deployments.outputs.deploy_irentstuff_purchase_get == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_purchase_get
          pip install -r requirements.txt

      - name: Package irentstuff_purchase_get Lambda
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_purchase_get
          zip -r irentstuff_purchase_get.zip . -x "test_irentstuff_purchase_get.py"

      - name: Deploy irentstuff_purchase_get Lambda
        run: |
          aws lambda update-function-code --function-name irentstuff-purchase-get --zip-file fileb://$GITHUB_WORKSPACE/irentstuff_purchase_get/irentstuff_purchase_get.zip

  # Stage 5e: Deploy irentstuff_purchase_user if triggered
  deploy_irentstuff_purchase_user:
    name: Deploy irentstuff_purchase_user Lambda
    runs-on: ubuntu-latest
    needs: orchestrate_lambda_deployments
    if: needs.orchestrate_lambda_deployments.outputs.deploy_irentstuff_purchase_user == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_purchase_user
          pip install -r requirements.txt

      - name: Package irentstuff_purchase_user Lambda
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_purchase_user
          zip -r irentstuff_purchase_user.zip . -x "test_irentstuff_purchase_user.py"

      - name: Deploy irentstuff_purchase_user Lambda
        run: |
          aws lambda update-function-code --function-name irentstuff-purchase-user --zip-file fileb://$GITHUB_WORKSPACE/irentstuff_purchase_user/irentstuff_purchase_user.zip

  # Stage 5f: Deploy irentstuff_rental_add if triggered
  deploy_irentstuff_rental_add:
    name: Deploy irentstuff_rental_add Lambda
    runs-on: ubuntu-latest
    needs: orchestrate_lambda_deployments
    if: needs.orchestrate_lambda_deployments.outputs.deploy_irentstuff_rental_add == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_rental_add
          pip install -r requirements.txt

      - name: Package irentstuff_rental_add Lambda
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_rental_add
          zip -r irentstuff_rental_add.zip . -x "test_irentstuff_rental_add.py"

      - name: Deploy irentstuff_rental_add Lambda
        run: |
          aws lambda update-function-code --function-name irentstuff-rental-add --zip-file fileb://$GITHUB_WORKSPACE/irentstuff_rental_add/irentstuff_rental_add.zip

  # Stage 5g: Deploy irentstuff_rental_update if triggered
  deploy_irentstuff_rental_update:
    name: Deploy irentstuff_rental_update Lambda
    runs-on: ubuntu-latest
    needs: orchestrate_lambda_deployments
    if: needs.orchestrate_lambda_deployments.outputs.deploy_irentstuff_rental_update == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_rental_update
          pip install -r requirements.txt

      - name: Package irentstuff_rental_update Lambda
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_rental_update
          zip -r irentstuff_rental_update.zip . -x "test_irentstuff_rental_update.py"

      - name: Deploy irentstuff_rental_update Lambda
        run: |
          aws lambda update-function-code --function-name irentstuff-rental-update --zip-file fileb://$GITHUB_WORKSPACE/irentstuff_rental_update/irentstuff_rental_update.zip

  # Stage 5h: Deploy irentstuff_rentals_get if triggered
  deploy_irentstuff_rentals_get:
    name: Deploy irentstuff_rentals_get Lambda
    runs-on: ubuntu-latest
    needs: orchestrate_lambda_deployments
    if: needs.orchestrate_lambda_deployments.outputs.deploy_irentstuff_rentals_get == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_rentals_get
          pip install -r requirements.txt

      - name: Package irentstuff_rentals_get Lambda
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_rentals_get
          zip -r irentstuff_rentals_get.zip . -x "test_irentstuff_rentals_get.py"

      - name: Deploy irentstuff_rentals_get Lambda
        run: |
          aws lambda update-function-code --function-name irentstuff-rentals-get --zip-file fileb://$GITHUB_WORKSPACE/irentstuff_rentals_get/irentstuff_rentals_get.zip

  # Stage 5i: Deploy irentstuff_rental_user if triggered
  deploy_irentstuff_rental_user:
    name: Deploy irentstuff_rental_user Lambda
    runs-on: ubuntu-latest
    needs: orchestrate_lambda_deployments
    if: needs.orchestrate_lambda_deployments.outputs.deploy_irentstuff_rental_user == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_rental_user
          pip install -r requirements.txt

      - name: Package irentstuff_rental_user Lambda
        run: |
          cd $GITHUB_WORKSPACE/irentstuff_rental_user
          zip -r irentstuff_rental_user.zip . -x "test_irentstuff_rental_user.py"

      - name: Deploy irentstuff_rental_user Lambda
        run: |
          aws lambda update-function-code --function-name irentstuff-rental-user --zip-file fileb://$GITHUB_WORKSPACE/irentstuff_rental_user/irentstuff_rental_user.zip